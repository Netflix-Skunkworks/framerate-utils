{"version":3,"file":"framerate-utils.esm.js","sources":["../src/utils/string.ts","../src/index.ts"],"sourcesContent":["export function pad(n: number) {\n  if (n < 10) {\n    return `0${n.toString(10)}`;\n  } else {\n    return n.toString(10);\n  }\n}\n\nexport function padMs(n: number) {\n  if (n < 10) {\n    return `00${n.toString(10)}`;\n  } else if (n < 100) {\n    return `0${n.toString(10)}`;\n  } else {\n    return n.toString(10);\n  }\n}\n","import { pad, padMs } from './utils/string';\n\nconst { round, ceil, floor, max } = Math;\n\nexport const SECONDS_PER_HOUR = 60 * 60;\nexport const SECONDS_PER_MINUTE = 60;\nexport const MILLISECONDS_PER_SECOND = 1000;\nexport const TICKS_PER_SECOND = 10000000;\n\nexport const RATE_23_976 = create(24, 1000, 1001);\nexport const RATE_24 = create(24, 1, 1);\nexport const RATE_25 = create(25, 1, 1);\nexport const RATE_29_97 = create(30, 1000, 1001);\nexport const RATE_29_97_DROP = create(30, 1000, 1001, true);\nexport const RATE_30 = create(30, 1, 1);\nexport const RATE_47_95 = create(48, 1000, 1001);\nexport const RATE_48 = create(48, 1, 1);\nexport const RATE_50 = create(50, 1, 1);\nexport const RATE_59_94 = create(60, 1000, 1001);\nexport const RATE_59_94_DROP = create(60, 1000, 1001, true);\nexport const RATE_60 = create(60, 1, 1);\n\nexport const DEFAULT_FRAME_RATE = RATE_23_976;\n\n/*\n * Adjustment required to account for rounding of input data.\n * For example:\n * frame 836 @ 24fps = 34.83333333333333s\n * This can be rounded by input format to 34833ms\n * 34833ms @ 24fps is frame 835.992 which will be treated as frame 835.\n * To adjust for this 0.001s will be added before truncating.\n *\n * Update: Rounding with CAP files can cause up to 2ms difference, so update\n * rounding to up to 2ms.\n */\nexport const FRAME_ROUNDING = 0.002;\n\nexport interface FrameRate {\n  rate: number;\n  numerator: number;\n  denominator: number;\n  fps: number;\n  dropFrame: boolean;\n}\n\nexport function create(\n  rate = 24,\n  numerator = 1,\n  denominator = 1,\n  dropFrame = false\n): FrameRate {\n  return {\n    rate,\n    numerator,\n    denominator,\n    fps: (rate * numerator) / denominator,\n    dropFrame,\n  };\n}\n\nexport function secondsToSmpte(frameRate: FrameRate, seconds: number) {\n  return frameToSmpte(frameRate, secondsToFrame(frameRate, seconds));\n}\n\nexport function smpteToSeconds(frameRate: FrameRate, smpte: string) {\n  return frameToSeconds(frameRate, smpteToFrame(frameRate, smpte));\n}\n\nexport function smpteToMs(frameRate: FrameRate, smpte: string) {\n  return ceil(smpteToSeconds(frameRate, smpte) * MILLISECONDS_PER_SECOND);\n}\n\nexport function msToSmpte(frameRate: FrameRate, ms: number) {\n  return secondsToSmpte(frameRate, ms / MILLISECONDS_PER_SECOND);\n}\n\nexport function smpteToTicks(frameRate: FrameRate, smpte: string) {\n  return ceil(smpteToSeconds(frameRate, smpte) * TICKS_PER_SECOND);\n}\n\nexport function ticksToSmpte(frameRate: FrameRate, ticks: number) {\n  return secondsToSmpte(frameRate, ticks / TICKS_PER_SECOND);\n}\n\nexport function secondsToFrame(frameRate: FrameRate, seconds: number) {\n  const frame = seconds * frameRate.fps + FRAME_ROUNDING * frameRate.fps;\n  return floor(frame);\n}\n\nexport function msToFrame(frameRate: FrameRate, ms: number) {\n  return secondsToFrame(frameRate, ms / MILLISECONDS_PER_SECOND);\n}\n\nexport function frameToMs(frameRate: FrameRate, frame: number) {\n  return ceil(frameToSeconds(frameRate, frame) * MILLISECONDS_PER_SECOND);\n}\n\nexport function ticksToFrame(frameRate: FrameRate, ticks: number) {\n  return secondsToFrame(frameRate, ticks / TICKS_PER_SECOND);\n}\n\nexport function frameToTicks(frameRate: FrameRate, frame: number) {\n  return ceil(frameToSeconds(frameRate, frame) * TICKS_PER_SECOND);\n}\n\nexport function frameToSmpte(frameRate: FrameRate, frame: number) {\n  const extra = extraFrames(frameRate, frame);\n  const seconds = (frame + extra) / frameRate.rate;\n  const f = round((seconds - floor(seconds)) * frameRate.rate);\n  const h = floor(seconds / SECONDS_PER_HOUR);\n  const m = floor((seconds % SECONDS_PER_HOUR) / SECONDS_PER_MINUTE);\n  const s = floor(seconds % SECONDS_PER_MINUTE);\n  const frameSeparator = frameRate.dropFrame ? ';' : ':';\n\n  return `${pad(h)}:${pad(m)}:${pad(s)}${frameSeparator}${pad(f)}`;\n}\n\nfunction div(dividend: number, divisor: number) {\n  return Math.floor(dividend / divisor);\n}\n\n/**\n * Return the number of extra frames required to convert drop frame to\n * SMPTE timecode.\n * Based on calculation from http://andrewduncan.net/timecodes/\n *          D = frameNumber div 17982\n *          M = frameNumber mod 17982\n *          frameNumber +=  18*D + 2*((M - 2) div 1798)\n * See also https://video.stackexchange.com/questions/22722/how-are-frames-in-59-94-drop-frame-timecode-dropped/22724#22724\n * for support for 59.94fps\n *\n * @param {FrameRate} frameRate The frame rate to use for conversion\n * @param {Number} frame The actual number of frames\n * @returns {Number} The extra frames required\n */\nexport function extraFrames(frameRate: FrameRate, frame: number) {\n  if (!frameRate.dropFrame) {\n    return 0;\n  }\n\n  let framesPer10Mins = 17982;\n  let dropFrames = 2;\n\n  if (frameRate.rate === 60) {\n    framesPer10Mins = 35964;\n    dropFrames = 4;\n  }\n\n  const D = div(frame, framesPer10Mins);\n  let M = frame % framesPer10Mins;\n  if (M < dropFrames) {\n    // Special case for M=0 and M=1: -2 div 1798 should be 0\n    M = dropFrames;\n  }\n\n  return max(\n    0,\n    9 * dropFrames * D +\n      dropFrames * div(M - dropFrames, div(framesPer10Mins, 10))\n  );\n}\n\n// Return the number of frames to subtract to convert smpte drop frame\n// back to frame number.\n// http://andrewduncan.net/timecodes/\n// totalMinutes = 60 * hours + minutes\n// frameNumber  = 108000 * hours + 1800 * minutes\n//                  + 30 * seconds + frames\n//                   - 2 * (totalMinutes - totalMinutes div 10)\nexport function subtractFrames(frameRate: FrameRate, h: number, m: number) {\n  if (!frameRate.dropFrame) {\n    return 0;\n  }\n\n  let dropFrames = 2;\n\n  if (frameRate.rate === 60) {\n    dropFrames = 4;\n  }\n\n  const totalMinutes = h * 60 + m;\n\n  return dropFrames * (totalMinutes - div(totalMinutes, 10));\n}\n\nexport function smpteToFrame(frameRate: FrameRate, smpte: string) {\n  const parts = smpte.split(/:|;/);\n  let h, m, s, f;\n\n  if (parts.length === 3) {\n    h = 0;\n    m = parseInt(parts[0]);\n    s = parseInt(parts[1]);\n    f = parseInt(parts[2]);\n  } else if (parts.length === 4) {\n    h = parseInt(parts[0]);\n    m = parseInt(parts[1]);\n    s = parseInt(parts[2]);\n    f = parseInt(parts[3]);\n  } else {\n    return 0;\n  }\n\n  const seconds = h * SECONDS_PER_HOUR + m * SECONDS_PER_MINUTE + s;\n  const frames = seconds * frameRate.rate + f;\n\n  return frames - subtractFrames(frameRate, h, m);\n}\n\nexport function frameToSeconds(frameRate: FrameRate, frame: number) {\n  return frame / frameRate.fps;\n}\n\nexport function seekByFrames(\n  frameRate: FrameRate,\n  fromTimeSeconds: number,\n  frameDelta: number\n) {\n  const frame = secondsToFrame(frameRate, fromTimeSeconds);\n  return seekToFrame(frameRate, frame + frameDelta);\n}\n\nexport function seekToFrame(frameRate: FrameRate, frame: number) {\n  const newTime = frameToSeconds(frameRate, frame);\n  const halfFrame = frameToSeconds(frameRate, 1) / 2;\n\n  // add half frame to ensure the resulting time is in the frame\n  return newTime + halfFrame;\n}\n\nexport function toFrameTime(frameRate: FrameRate, seconds: number) {\n  return seekByFrames(frameRate, seconds, 0);\n}\n\nexport function mediaToSeconds(media: string) {\n  const parts = media.split(/:|\\.|,/);\n  let h, m, s, ms;\n\n  if (parts.length === 4) {\n    h = parseInt(parts[0]);\n    m = parseInt(parts[1]);\n    s = parseInt(parts[2]);\n    ms = parseInt(parts[3]);\n  } else {\n    return 0;\n  }\n\n  var seconds = h * SECONDS_PER_HOUR + m * SECONDS_PER_MINUTE + s;\n  return seconds + ms / 1000;\n}\n\nexport function secondsToMedia(seconds: number) {\n  var sec = floor(seconds);\n  var ms = round((seconds - sec) * MILLISECONDS_PER_SECOND);\n  var h = floor(sec / SECONDS_PER_HOUR);\n  var m = floor((sec % SECONDS_PER_HOUR) / SECONDS_PER_MINUTE);\n  var s = floor(sec % SECONDS_PER_MINUTE);\n\n  return pad(h) + ':' + pad(m) + ':' + pad(s) + '.' + padMs(ms);\n}\n\nexport function mediaFramesToSeconds(fr: FrameRate, media: string) {\n  var parts = media.split(/:/);\n  let h, m, s, f;\n\n  if (parts.length === 4) {\n    h = parseInt(parts[0]);\n    m = parseInt(parts[1]);\n    s = parseInt(parts[2]);\n    f = parseInt(parts[3]);\n  } else {\n    return 0;\n  }\n\n  var seconds = h * SECONDS_PER_HOUR + m * SECONDS_PER_MINUTE + s;\n  return seconds + f / fr.fps;\n}\n\nexport function secondsToMediaFrames(fr: FrameRate, seconds: number) {\n  var sec = floor(seconds);\n  var f = round((seconds - sec) * fr.fps);\n  var h = floor(sec / SECONDS_PER_HOUR);\n  var m = floor((sec % SECONDS_PER_HOUR) / SECONDS_PER_MINUTE);\n  var s = floor(sec % SECONDS_PER_MINUTE);\n\n  return pad(h) + ':' + pad(m) + ':' + pad(s) + ':' + pad(f);\n}\n\nexport function ticksToSeconds(ticks: number) {\n  return ticks / TICKS_PER_SECOND;\n}\n\nexport function secondsToTicks(seconds: number) {\n  return floor(seconds * TICKS_PER_SECOND);\n}\n\nexport function msToSeconds(ms: number) {\n  return ms / MILLISECONDS_PER_SECOND;\n}\n\nexport function secondsToMs(seconds: number) {\n  return seconds * MILLISECONDS_PER_SECOND;\n}\n\nexport function fromTag(tag: string) {\n  switch (tag) {\n    case 'FPS_2397':\n      return RATE_23_976;\n    case 'FPS_24':\n      return RATE_24;\n    case 'FPS_2400':\n      return RATE_24;\n    case 'FPS_25':\n      return RATE_25;\n    case 'FPS_2500':\n      return RATE_25;\n    case 'FPS_2997':\n      return RATE_29_97_DROP;\n    case 'FPS_30':\n      return RATE_30;\n    case 'FPS_3000':\n      return RATE_30;\n    case 'FPS_4795':\n      return RATE_47_95;\n    case 'FPS_48':\n      return RATE_48;\n    case 'FPS_4800':\n      return RATE_48;\n    case 'FPS_50':\n      return RATE_50;\n    case 'FPS_5000':\n      return RATE_50;\n    case 'FPS_5994':\n      return RATE_59_94_DROP;\n    case 'FPS_60':\n      return RATE_60;\n    case 'FPS_6000':\n      return RATE_60;\n    default:\n      throw new TypeError(`Unknown Frame Rate ${tag}`);\n  }\n}\n"],"names":["pad","n","toString","padMs","round","Math","ceil","floor","max","SECONDS_PER_HOUR","SECONDS_PER_MINUTE","MILLISECONDS_PER_SECOND","TICKS_PER_SECOND","RATE_23_976","create","RATE_24","RATE_25","RATE_29_97","RATE_29_97_DROP","RATE_30","RATE_47_95","RATE_48","RATE_50","RATE_59_94","RATE_59_94_DROP","RATE_60","DEFAULT_FRAME_RATE","FRAME_ROUNDING","rate","numerator","denominator","dropFrame","fps","secondsToSmpte","frameRate","seconds","frameToSmpte","secondsToFrame","smpteToSeconds","smpte","frameToSeconds","smpteToFrame","smpteToMs","msToSmpte","ms","smpteToTicks","ticksToSmpte","ticks","frame","msToFrame","frameToMs","ticksToFrame","frameToTicks","extra","extraFrames","f","h","m","s","frameSeparator","div","dividend","divisor","framesPer10Mins","dropFrames","D","M","subtractFrames","totalMinutes","parts","split","length","parseInt","frames","seekByFrames","fromTimeSeconds","frameDelta","seekToFrame","newTime","halfFrame","toFrameTime","mediaToSeconds","media","secondsToMedia","sec","mediaFramesToSeconds","fr","secondsToMediaFrames","ticksToSeconds","secondsToTicks","msToSeconds","secondsToMs","fromTag","tag","TypeError"],"mappings":"SAAgBA,IAAIC;AAClB,MAAIA,CAAC,GAAG,EAAR,EAAY;AACV,iBAAWA,CAAC,CAACC,QAAF,CAAW,EAAX,CAAX;AACD,GAFD,MAEO;AACL,WAAOD,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACD;AACF;SAEeC,MAAMF;AACpB,MAAIA,CAAC,GAAG,EAAR,EAAY;AACV,kBAAYA,CAAC,CAACC,QAAF,CAAW,EAAX,CAAZ;AACD,GAFD,MAEO,IAAID,CAAC,GAAG,GAAR,EAAa;AAClB,iBAAWA,CAAC,CAACC,QAAF,CAAW,EAAX,CAAX;AACD,GAFM,MAEA;AACL,WAAOD,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACD;AACF;;ACdD,IAAQE,KAAR,GAAoCC,IAApC,CAAQD,KAAR;AAAA,IAAeE,IAAf,GAAoCD,IAApC,CAAeC,IAAf;AAAA,IAAqBC,KAArB,GAAoCF,IAApC,CAAqBE,KAArB;AAAA,IAA4BC,GAA5B,GAAoCH,IAApC,CAA4BG,GAA5B;AAEA,IAAaC,gBAAgB,GAAG,KAAK,EAA9B;AACP,IAAaC,kBAAkB,GAAG,EAA3B;AACP,IAAaC,uBAAuB,GAAG,IAAhC;AACP,IAAaC,gBAAgB,GAAG,QAAzB;AAEP,IAAaC,WAAW,gBAAGC,MAAM,CAAC,EAAD,EAAK,IAAL,EAAW,IAAX,CAA1B;AACP,IAAaC,OAAO,gBAAGD,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAtB;AACP,IAAaE,OAAO,gBAAGF,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAtB;AACP,IAAaG,UAAU,gBAAGH,MAAM,CAAC,EAAD,EAAK,IAAL,EAAW,IAAX,CAAzB;AACP,IAAaI,eAAe,gBAAGJ,MAAM,CAAC,EAAD,EAAK,IAAL,EAAW,IAAX,EAAiB,IAAjB,CAA9B;AACP,IAAaK,OAAO,gBAAGL,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAtB;AACP,IAAaM,UAAU,gBAAGN,MAAM,CAAC,EAAD,EAAK,IAAL,EAAW,IAAX,CAAzB;AACP,IAAaO,OAAO,gBAAGP,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAtB;AACP,IAAaQ,OAAO,gBAAGR,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAtB;AACP,IAAaS,UAAU,gBAAGT,MAAM,CAAC,EAAD,EAAK,IAAL,EAAW,IAAX,CAAzB;AACP,IAAaU,eAAe,gBAAGV,MAAM,CAAC,EAAD,EAAK,IAAL,EAAW,IAAX,EAAiB,IAAjB,CAA9B;AACP,IAAaW,OAAO,gBAAGX,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAtB;AAEP,IAAaY,kBAAkB,GAAGb,WAA3B;AAEP;;;;;;;;;;;;AAWA,IAAac,cAAc,GAAG,KAAvB;AAUP,SAAgBb,OACdc,MACAC,WACAC,aACAC;MAHAH;AAAAA,IAAAA,OAAO;;;MACPC;AAAAA,IAAAA,YAAY;;;MACZC;AAAAA,IAAAA,cAAc;;;MACdC;AAAAA,IAAAA,YAAY;;;AAEZ,SAAO;AACLH,IAAAA,IAAI,EAAJA,IADK;AAELC,IAAAA,SAAS,EAATA,SAFK;AAGLC,IAAAA,WAAW,EAAXA,WAHK;AAILE,IAAAA,GAAG,EAAGJ,IAAI,GAAGC,SAAR,GAAqBC,WAJrB;AAKLC,IAAAA,SAAS,EAATA;AALK,GAAP;AAOD;AAED,SAAgBE,eAAeC,WAAsBC;AACnD,SAAOC,YAAY,CAACF,SAAD,EAAYG,cAAc,CAACH,SAAD,EAAYC,OAAZ,CAA1B,CAAnB;AACD;AAED,SAAgBG,eAAeJ,WAAsBK;AACnD,SAAOC,cAAc,CAACN,SAAD,EAAYO,YAAY,CAACP,SAAD,EAAYK,KAAZ,CAAxB,CAArB;AACD;AAED,SAAgBG,UAAUR,WAAsBK;AAC9C,SAAOjC,IAAI,CAACgC,cAAc,CAACJ,SAAD,EAAYK,KAAZ,CAAd,GAAmC5B,uBAApC,CAAX;AACD;AAED,SAAgBgC,UAAUT,WAAsBU;AAC9C,SAAOX,cAAc,CAACC,SAAD,EAAYU,EAAE,GAAGjC,uBAAjB,CAArB;AACD;AAED,SAAgBkC,aAAaX,WAAsBK;AACjD,SAAOjC,IAAI,CAACgC,cAAc,CAACJ,SAAD,EAAYK,KAAZ,CAAd,GAAmC3B,gBAApC,CAAX;AACD;AAED,SAAgBkC,aAAaZ,WAAsBa;AACjD,SAAOd,cAAc,CAACC,SAAD,EAAYa,KAAK,GAAGnC,gBAApB,CAArB;AACD;AAED,SAAgByB,eAAeH,WAAsBC;AACnD,MAAMa,KAAK,GAAGb,OAAO,GAAGD,SAAS,CAACF,GAApB,GAA0BL,cAAc,GAAGO,SAAS,CAACF,GAAnE;AACA,SAAOzB,KAAK,CAACyC,KAAD,CAAZ;AACD;AAED,SAAgBC,UAAUf,WAAsBU;AAC9C,SAAOP,cAAc,CAACH,SAAD,EAAYU,EAAE,GAAGjC,uBAAjB,CAArB;AACD;AAED,SAAgBuC,UAAUhB,WAAsBc;AAC9C,SAAO1C,IAAI,CAACkC,cAAc,CAACN,SAAD,EAAYc,KAAZ,CAAd,GAAmCrC,uBAApC,CAAX;AACD;AAED,SAAgBwC,aAAajB,WAAsBa;AACjD,SAAOV,cAAc,CAACH,SAAD,EAAYa,KAAK,GAAGnC,gBAApB,CAArB;AACD;AAED,SAAgBwC,aAAalB,WAAsBc;AACjD,SAAO1C,IAAI,CAACkC,cAAc,CAACN,SAAD,EAAYc,KAAZ,CAAd,GAAmCpC,gBAApC,CAAX;AACD;AAED,SAAgBwB,aAAaF,WAAsBc;AACjD,MAAMK,KAAK,GAAGC,WAAW,CAACpB,SAAD,EAAYc,KAAZ,CAAzB;AACA,MAAMb,OAAO,GAAG,CAACa,KAAK,GAAGK,KAAT,IAAkBnB,SAAS,CAACN,IAA5C;AACA,MAAM2B,CAAC,GAAGnD,KAAK,CAAC,CAAC+B,OAAO,GAAG5B,KAAK,CAAC4B,OAAD,CAAhB,IAA6BD,SAAS,CAACN,IAAxC,CAAf;AACA,MAAM4B,CAAC,GAAGjD,KAAK,CAAC4B,OAAO,GAAG1B,gBAAX,CAAf;AACA,MAAMgD,CAAC,GAAGlD,KAAK,CAAE4B,OAAO,GAAG1B,gBAAX,GAA+BC,kBAAhC,CAAf;AACA,MAAMgD,CAAC,GAAGnD,KAAK,CAAC4B,OAAO,GAAGzB,kBAAX,CAAf;AACA,MAAMiD,cAAc,GAAGzB,SAAS,CAACH,SAAV,GAAsB,GAAtB,GAA4B,GAAnD;AAEA,SAAU/B,GAAG,CAACwD,CAAD,CAAb,SAAoBxD,GAAG,CAACyD,CAAD,CAAvB,SAA8BzD,GAAG,CAAC0D,CAAD,CAAjC,GAAuCC,cAAvC,GAAwD3D,GAAG,CAACuD,CAAD,CAA3D;AACD;;AAED,SAASK,GAAT,CAAaC,QAAb,EAA+BC,OAA/B;AACE,SAAOzD,IAAI,CAACE,KAAL,CAAWsD,QAAQ,GAAGC,OAAtB,CAAP;AACD;AAED;;;;;;;;;;;;;;;;AAcA,SAAgBR,YAAYpB,WAAsBc;AAChD,MAAI,CAACd,SAAS,CAACH,SAAf,EAA0B;AACxB,WAAO,CAAP;AACD;;AAED,MAAIgC,eAAe,GAAG,KAAtB;AACA,MAAIC,UAAU,GAAG,CAAjB;;AAEA,MAAI9B,SAAS,CAACN,IAAV,KAAmB,EAAvB,EAA2B;AACzBmC,IAAAA,eAAe,GAAG,KAAlB;AACAC,IAAAA,UAAU,GAAG,CAAb;AACD;;AAED,MAAMC,CAAC,GAAGL,GAAG,CAACZ,KAAD,EAAQe,eAAR,CAAb;AACA,MAAIG,CAAC,GAAGlB,KAAK,GAAGe,eAAhB;;AACA,MAAIG,CAAC,GAAGF,UAAR,EAAoB;AAClB;AACAE,IAAAA,CAAC,GAAGF,UAAJ;AACD;;AAED,SAAOxD,GAAG,CACR,CADQ,EAER,IAAIwD,UAAJ,GAAiBC,CAAjB,GACED,UAAU,GAAGJ,GAAG,CAACM,CAAC,GAAGF,UAAL,EAAiBJ,GAAG,CAACG,eAAD,EAAkB,EAAlB,CAApB,CAHV,CAAV;AAKD;AAGD;AACA;AACA;AACA;AACA;AACA;;AACA,SAAgBI,eAAejC,WAAsBsB,GAAWC;AAC9D,MAAI,CAACvB,SAAS,CAACH,SAAf,EAA0B;AACxB,WAAO,CAAP;AACD;;AAED,MAAIiC,UAAU,GAAG,CAAjB;;AAEA,MAAI9B,SAAS,CAACN,IAAV,KAAmB,EAAvB,EAA2B;AACzBoC,IAAAA,UAAU,GAAG,CAAb;AACD;;AAED,MAAMI,YAAY,GAAGZ,CAAC,GAAG,EAAJ,GAASC,CAA9B;AAEA,SAAOO,UAAU,IAAII,YAAY,GAAGR,GAAG,CAACQ,YAAD,EAAe,EAAf,CAAtB,CAAjB;AACD;AAED,SAAgB3B,aAAaP,WAAsBK;AACjD,MAAM8B,KAAK,GAAG9B,KAAK,CAAC+B,KAAN,CAAY,KAAZ,CAAd;AACA,MAAId,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaH,CAAb;;AAEA,MAAIc,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtBf,IAAAA,CAAC,GAAG,CAAJ;AACAC,IAAAA,CAAC,GAAGe,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAX,IAAAA,CAAC,GAAGc,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAd,IAAAA,CAAC,GAAGiB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACD,GALD,MAKO,IAAIA,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AAC7Bf,IAAAA,CAAC,GAAGgB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAZ,IAAAA,CAAC,GAAGe,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAX,IAAAA,CAAC,GAAGc,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAd,IAAAA,CAAC,GAAGiB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACD,GALM,MAKA;AACL,WAAO,CAAP;AACD;;AAED,MAAMlC,OAAO,GAAGqB,CAAC,GAAG/C,gBAAJ,GAAuBgD,CAAC,GAAG/C,kBAA3B,GAAgDgD,CAAhE;AACA,MAAMe,MAAM,GAAGtC,OAAO,GAAGD,SAAS,CAACN,IAApB,GAA2B2B,CAA1C;AAEA,SAAOkB,MAAM,GAAGN,cAAc,CAACjC,SAAD,EAAYsB,CAAZ,EAAeC,CAAf,CAA9B;AACD;AAED,SAAgBjB,eAAeN,WAAsBc;AACnD,SAAOA,KAAK,GAAGd,SAAS,CAACF,GAAzB;AACD;AAED,SAAgB0C,aACdxC,WACAyC,iBACAC;AAEA,MAAM5B,KAAK,GAAGX,cAAc,CAACH,SAAD,EAAYyC,eAAZ,CAA5B;AACA,SAAOE,WAAW,CAAC3C,SAAD,EAAYc,KAAK,GAAG4B,UAApB,CAAlB;AACD;AAED,SAAgBC,YAAY3C,WAAsBc;AAChD,MAAM8B,OAAO,GAAGtC,cAAc,CAACN,SAAD,EAAYc,KAAZ,CAA9B;AACA,MAAM+B,SAAS,GAAGvC,cAAc,CAACN,SAAD,EAAY,CAAZ,CAAd,GAA+B,CAAjD;;AAGA,SAAO4C,OAAO,GAAGC,SAAjB;AACD;AAED,SAAgBC,YAAY9C,WAAsBC;AAChD,SAAOuC,YAAY,CAACxC,SAAD,EAAYC,OAAZ,EAAqB,CAArB,CAAnB;AACD;AAED,SAAgB8C,eAAeC;AAC7B,MAAMb,KAAK,GAAGa,KAAK,CAACZ,KAAN,CAAY,QAAZ,CAAd;AACA,MAAId,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAad,EAAb;;AAEA,MAAIyB,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtBf,IAAAA,CAAC,GAAGgB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAZ,IAAAA,CAAC,GAAGe,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAX,IAAAA,CAAC,GAAGc,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAzB,IAAAA,EAAE,GAAG4B,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAb;AACD,GALD,MAKO;AACL,WAAO,CAAP;AACD;;AAED,MAAIlC,OAAO,GAAGqB,CAAC,GAAG/C,gBAAJ,GAAuBgD,CAAC,GAAG/C,kBAA3B,GAAgDgD,CAA9D;AACA,SAAOvB,OAAO,GAAGS,EAAE,GAAG,IAAtB;AACD;AAED,SAAgBuC,eAAehD;AAC7B,MAAIiD,GAAG,GAAG7E,KAAK,CAAC4B,OAAD,CAAf;AACA,MAAIS,EAAE,GAAGxC,KAAK,CAAC,CAAC+B,OAAO,GAAGiD,GAAX,IAAkBzE,uBAAnB,CAAd;AACA,MAAI6C,CAAC,GAAGjD,KAAK,CAAC6E,GAAG,GAAG3E,gBAAP,CAAb;AACA,MAAIgD,CAAC,GAAGlD,KAAK,CAAE6E,GAAG,GAAG3E,gBAAP,GAA2BC,kBAA5B,CAAb;AACA,MAAIgD,CAAC,GAAGnD,KAAK,CAAC6E,GAAG,GAAG1E,kBAAP,CAAb;AAEA,SAAOV,GAAG,CAACwD,CAAD,CAAH,GAAS,GAAT,GAAexD,GAAG,CAACyD,CAAD,CAAlB,GAAwB,GAAxB,GAA8BzD,GAAG,CAAC0D,CAAD,CAAjC,GAAuC,GAAvC,GAA6CvD,KAAK,CAACyC,EAAD,CAAzD;AACD;AAED,SAAgByC,qBAAqBC,IAAeJ;AAClD,MAAIb,KAAK,GAAGa,KAAK,CAACZ,KAAN,CAAY,GAAZ,CAAZ;AACA,MAAId,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaH,CAAb;;AAEA,MAAIc,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtBf,IAAAA,CAAC,GAAGgB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAZ,IAAAA,CAAC,GAAGe,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAX,IAAAA,CAAC,GAAGc,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACAd,IAAAA,CAAC,GAAGiB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAZ;AACD,GALD,MAKO;AACL,WAAO,CAAP;AACD;;AAED,MAAIlC,OAAO,GAAGqB,CAAC,GAAG/C,gBAAJ,GAAuBgD,CAAC,GAAG/C,kBAA3B,GAAgDgD,CAA9D;AACA,SAAOvB,OAAO,GAAGoB,CAAC,GAAG+B,EAAE,CAACtD,GAAxB;AACD;AAED,SAAgBuD,qBAAqBD,IAAenD;AAClD,MAAIiD,GAAG,GAAG7E,KAAK,CAAC4B,OAAD,CAAf;AACA,MAAIoB,CAAC,GAAGnD,KAAK,CAAC,CAAC+B,OAAO,GAAGiD,GAAX,IAAkBE,EAAE,CAACtD,GAAtB,CAAb;AACA,MAAIwB,CAAC,GAAGjD,KAAK,CAAC6E,GAAG,GAAG3E,gBAAP,CAAb;AACA,MAAIgD,CAAC,GAAGlD,KAAK,CAAE6E,GAAG,GAAG3E,gBAAP,GAA2BC,kBAA5B,CAAb;AACA,MAAIgD,CAAC,GAAGnD,KAAK,CAAC6E,GAAG,GAAG1E,kBAAP,CAAb;AAEA,SAAOV,GAAG,CAACwD,CAAD,CAAH,GAAS,GAAT,GAAexD,GAAG,CAACyD,CAAD,CAAlB,GAAwB,GAAxB,GAA8BzD,GAAG,CAAC0D,CAAD,CAAjC,GAAuC,GAAvC,GAA6C1D,GAAG,CAACuD,CAAD,CAAvD;AACD;AAED,SAAgBiC,eAAezC;AAC7B,SAAOA,KAAK,GAAGnC,gBAAf;AACD;AAED,SAAgB6E,eAAetD;AAC7B,SAAO5B,KAAK,CAAC4B,OAAO,GAAGvB,gBAAX,CAAZ;AACD;AAED,SAAgB8E,YAAY9C;AAC1B,SAAOA,EAAE,GAAGjC,uBAAZ;AACD;AAED,SAAgBgF,YAAYxD;AAC1B,SAAOA,OAAO,GAAGxB,uBAAjB;AACD;AAED,SAAgBiF,QAAQC;AACtB,UAAQA,GAAR;AACE,SAAK,UAAL;AACE,aAAOhF,WAAP;;AACF,SAAK,QAAL;AACE,aAAOE,OAAP;;AACF,SAAK,UAAL;AACE,aAAOA,OAAP;;AACF,SAAK,QAAL;AACE,aAAOC,OAAP;;AACF,SAAK,UAAL;AACE,aAAOA,OAAP;;AACF,SAAK,UAAL;AACE,aAAOE,eAAP;;AACF,SAAK,QAAL;AACE,aAAOC,OAAP;;AACF,SAAK,UAAL;AACE,aAAOA,OAAP;;AACF,SAAK,UAAL;AACE,aAAOC,UAAP;;AACF,SAAK,QAAL;AACE,aAAOC,OAAP;;AACF,SAAK,UAAL;AACE,aAAOA,OAAP;;AACF,SAAK,QAAL;AACE,aAAOC,OAAP;;AACF,SAAK,UAAL;AACE,aAAOA,OAAP;;AACF,SAAK,UAAL;AACE,aAAOE,eAAP;;AACF,SAAK,QAAL;AACE,aAAOC,OAAP;;AACF,SAAK,UAAL;AACE,aAAOA,OAAP;;AACF;AACE,YAAM,IAAIqE,SAAJ,yBAAoCD,GAApC,CAAN;AAlCJ;AAoCD;;;;"}